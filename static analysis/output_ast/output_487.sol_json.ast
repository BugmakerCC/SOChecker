{
  "absolutePath": "output/output_487.sol",
  "exportedSymbols":
  {
    "Puisne_stakers_v1":
    [
      13
    ]
  },
  "id": 14,
  "nodeType": "SourceUnit",
  "nodes":
  [
    {
      "id": 1,
      "literals":
      [
        "solidity",
        "^",
        "0.8",
        ".9"
      ],
      "nodeType": "PragmaDirective",
      "src": "0:23:0"
    },
    {
      "abstract": false,
      "baseContracts": [],
      "canonicalName": "Puisne_stakers_v1",
      "contractDependencies": [],
      "contractKind": "contract",
      "fullyImplemented": true,
      "id": 13,
      "linearizedBaseContracts":
      [
        13
      ],
      "name": "Puisne_stakers_v1",
      "nameLocation": "34:17:0",
      "nodeType": "ContractDefinition",
      "nodes":
      [
        {
          "body":
          {
            "id": 11,
            "nodeType": "Block",
            "src": "97:48:0",
            "statements":
            [
              {
                "expression":
                {
                  "arguments":
                  [
                    {
                      "commonType":
                      {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression":
                      {
                        "expression":
                        {
                          "id": 5,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "116:3:0",
                          "typeDescriptions":
                          {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "116:9:0",
                        "typeDescriptions":
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression":
                      {
                        "hexValue": "31",
                        "id": 7,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "129:7:0",
                        "subdenomination": "ether",
                        "typeDescriptions":
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      "src": "116:20:0",
                      "typeDescriptions":
                      {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  ],
                  "expression":
                  {
                    "argumentTypes":
                    [
                      {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    ],
                    "id": 4,
                    "name": "require",
                    "nodeType": "Identifier",
                    "overloadedDeclarations":
                    [
                      -18,
                      -18
                    ],
                    "referencedDeclaration": -18,
                    "src": "108:7:0",
                    "typeDescriptions":
                    {
                      "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                      "typeString": "function (bool) pure"
                    }
                  },
                  "id": 9,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "108:29:0",
                  "tryCall": false,
                  "typeDescriptions":
                  {
                    "typeIdentifier": "t_tuple$__$",
                    "typeString": "tuple()"
                  }
                },
                "id": 10,
                "nodeType": "ExpressionStatement",
                "src": "108:29:0"
              }
            ]
          },
          "functionSelector": "e7147dcf",
          "id": 12,
          "implemented": true,
          "kind": "function",
          "modifiers": [],
          "name": "addStaker",
          "nameLocation": "70:9:0",
          "nodeType": "FunctionDefinition",
          "parameters":
          {
            "id": 2,
            "nodeType": "ParameterList",
            "parameters": [],
            "src": "79:2:0"
          },
          "returnParameters":
          {
            "id": 3,
            "nodeType": "ParameterList",
            "parameters": [],
            "src": "97:0:0"
          },
          "scope": 13,
          "src": "61:84:0",
          "stateMutability": "payable",
          "virtual": false,
          "visibility": "public"
        }
      ],
      "scope": 14,
      "src": "25:123:0",
      "usedErrors": []
    }
  ],
  "src": "0:152:0"
}