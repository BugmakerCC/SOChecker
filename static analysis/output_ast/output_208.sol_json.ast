{
  "absolutePath": "output/output_208.sol",
  "exportedSymbols":
  {
    "Escrow":
    [
      17
    ]
  },
  "id": 18,
  "nodeType": "SourceUnit",
  "nodes":
  [
    {
      "id": 1,
      "literals":
      [
        "solidity",
        "^",
        "0.8",
        ".9"
      ],
      "nodeType": "PragmaDirective",
      "src": "0:23:0"
    },
    {
      "abstract": false,
      "baseContracts": [],
      "canonicalName": "Escrow",
      "contractDependencies": [],
      "contractKind": "contract",
      "fullyImplemented": true,
      "id": 17,
      "linearizedBaseContracts":
      [
        17
      ],
      "name": "Escrow",
      "nameLocation": "34:6:0",
      "nodeType": "ContractDefinition",
      "nodes":
      [
        {
          "body":
          {
            "id": 13,
            "nodeType": "Block",
            "src": "75:47:0",
            "statements":
            [
              {
                "expression":
                {
                  "arguments":
                  [
                    {
                      "expression":
                      {
                        "id": 9,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "106:3:0",
                        "typeDescriptions":
                        {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "106:9:0",
                      "typeDescriptions":
                      {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  ],
                  "expression":
                  {
                    "argumentTypes":
                    [
                      {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    ],
                    "expression":
                    {
                      "arguments":
                      [
                        {
                          "id": 6,
                          "name": "buyer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "90:5:0",
                          "typeDescriptions":
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression":
                      {
                        "argumentTypes":
                        [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "82:8:0",
                        "typeDescriptions":
                        {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName":
                        {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "82:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "82:14:0",
                      "tryCall": false,
                      "typeDescriptions":
                      {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 8,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "transfer",
                    "nodeType": "MemberAccess",
                    "src": "82:23:0",
                    "typeDescriptions":
                    {
                      "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                      "typeString": "function (uint256)"
                    }
                  },
                  "id": 11,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "82:34:0",
                  "tryCall": false,
                  "typeDescriptions":
                  {
                    "typeIdentifier": "t_tuple$__$",
                    "typeString": "tuple()"
                  }
                },
                "id": 12,
                "nodeType": "ExpressionStatement",
                "src": "82:34:0"
              }
            ]
          },
          "id": 14,
          "implemented": true,
          "kind": "receive",
          "modifiers": [],
          "name": "",
          "nameLocation": "-1:-1:-1",
          "nodeType": "FunctionDefinition",
          "parameters":
          {
            "id": 2,
            "nodeType": "ParameterList",
            "parameters": [],
            "src": "55:2:0"
          },
          "returnParameters":
          {
            "id": 3,
            "nodeType": "ParameterList",
            "parameters": [],
            "src": "75:0:0"
          },
          "scope": 17,
          "src": "48:74:0",
          "stateMutability": "payable",
          "virtual": false,
          "visibility": "external"
        },
        {
          "constant": false,
          "id": 16,
          "mutability": "mutable",
          "name": "buyer",
          "nameLocation": "144:5:0",
          "nodeType": "VariableDeclaration",
          "scope": 17,
          "src": "128:21:0",
          "stateVariable": true,
          "storageLocation": "default",
          "typeDescriptions":
          {
            "typeIdentifier": "t_address",
            "typeString": "address"
          },
          "typeName":
          {
            "id": 15,
            "name": "address",
            "nodeType": "ElementaryTypeName",
            "src": "128:7:0",
            "stateMutability": "nonpayable",
            "typeDescriptions":
            {
              "typeIdentifier": "t_address",
              "typeString": "address"
            }
          },
          "visibility": "private"
        }
      ],
      "scope": 18,
      "src": "25:130:0",
      "usedErrors": []
    }
  ],
  "src": "0:159:0"
}